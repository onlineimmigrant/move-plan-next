import React from 'react';
import { notFound } from 'next/navigation';
import '@/components/PostPage/PostEditor.css';
import { getOrganizationId } from '@/lib/supabase';
import PostPageClient from './PostPageClient';

interface Post {
  id: string;
  slug: string;
  title: string;
  description: string;
  content: string;
  section?: string;
  subsection?: string;
  created_on: string;
  is_with_author: boolean;
  is_company_author: boolean;
  author?: { first_name: string; last_name: string };
  excerpt?: string;
  featured_image?: string;
  keywords?: string;
  section_id?: string | null;
  last_modified: string;
  display_this_post: boolean;
  reviews?: { rating: number; author: string; comment: string }[];
  faqs?: { question: string; answer: string }[];
  organization_id?: string;
  main_photo?: string;
  additional_photo?: string;
}

// Server-side function to fetch post data
async function fetchPostData(slug: string): Promise<Post | null> {
  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';
  
  try {
    const organizationId = await getOrganizationId(baseUrl);
    console.log('üîç [ServerSide] Fetching post for slug:', slug, 'organizationId:', organizationId);
    
    const response = await fetch(
      `${baseUrl}/api/posts/${slug}?organization_id=${organizationId}`,
      { cache: 'no-store' } // Always fetch fresh data
    );
    
    if (!response.ok) {
      console.log('‚ùå [ServerSide] Post API response not ok:', response.status);
      return null;
    }
    
    const data = await response.json();
    console.log('‚úÖ [ServerSide] Post data fetched successfully:', data?.title);
    return data;
  } catch (error) {
    console.error('‚ùå [ServerSide] Error fetching post:', error);
    return null;
  }
}

interface PostPageProps {
  params: Promise<{ slug: string; locale: string }>;
}

export default async function PostPage({ params }: PostPageProps) {
  console.log('üî• [ServerSide] PostPage component loading');
  
  const { slug, locale } = await params;
  console.log('üî• [ServerSide] PostPage params - slug:', slug, 'locale:', locale);
  
  // Fetch post data server-side
  const post = await fetchPostData(slug);
  
  if (!post) {
    console.log('‚ùå [ServerSide] Post not found, calling notFound()');
    notFound();
  }
  
  if (!post.display_this_post) {
    console.log('‚ùå [ServerSide] Post not set to display, calling notFound()');
    notFound();
  }
  
  console.log('‚úÖ [ServerSide] Post found and will be rendered:', post.title);
  console.log('üîç [ServerSide] Article structured data will be generated by SEO system');
  
  return (
    <>
      {/* Client component for interactive functionality */}
      <PostPageClient post={post} slug={slug} />
    </>
  );
}